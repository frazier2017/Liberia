load("C:/Users/Kathryn Murphy/Desktop/INTR/lab_5/.RData")
rm(list=ls())
gpw4<-raster("~/Documents/W_M/Year_1/2017_Summer/Monroe_Project/gpw-v4-population-count_2010.tif")
rm(list=ls())
setwd("~/GitHub/Liberia")
library(rgdal)
library(dplyr)
library(ggmap)
library(raster)
library(spatstat)
library(maptools)
library(sp)
library(rgeos)
library(foreign)
library(knitr)
library(gridExtra)
gpw4<-raster("~/Documents/W_M/Year_1/2017_Summer/Monroe_Project/gpw-v4-population-count_2010.tif")
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4
x <-raster(ncol=36, nrow=18, xmn=-11.5, xmax=4.25, ymn=-7.25, ymx=8.6)
res(x)
x <- raster(ncol=36, nrow=18, xmn=-11.5, xmax=4.25, ymn=-7.25, ymx=8.6)
x <- raster(ncol=36, nrow=18, xmn=-11.5, xmx=4.25, ymn=-7.25, ymx=8.6)
res(x)
ncol(x)
gpw4 <- spTransform(gpw4, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
projection(gpw4) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
plot(gwp4)
projection(gwp4) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
projection(gpw4) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
plot(gpw4)
gpw4
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4
xmax(gpw4)<- (-11.65)
xmax(gpw4)<- (4.25)
xmin(gpw4) <- (-11.65)
ymin(gpw4) <- (-7.25)
ymax(gpw4) <- (8.6)
gpw4
plot(gpw4)
gpw4
nrow(gpw4) <- 1000
plot(gpw4)
gpw4
gpw4<-raster("gpw-v4-population-count_2010.tif")
hasValues(gpw4)
res(gpw4)
dim(gpw4)
inMemory(gpw4)
plot(gpw4, main='Please be Liberia and not the World')
nlayers(gpw4)
gpw4test <- crop(gpw4, extent(-11.65, 4.25, -7.25, 8.6))
plot(gpw4test)
gpw4
gpw4test <- crop(gpw4, extent(-12, 5, -8, 9))
PLOT(gpw4test2)
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-12, 5, -8, 9))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, 5, -8, 9))
plot(gpw4test2)
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4test2 <- crop(gpw4, extent(4, 5, -8, 9))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(4, 5, -6, 9))
plot(gpw4test2)
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4test2 <- crop(gpw4, extent(4, 5, -4, 9))
plot(gpw4test2)
gpw4test1 <- crop(gpw4, extent(-11.65, 4.25, -7.25, 8.6))
plot(gpw4test1)
4
4
gpw4test2 <- crop(gpw4, extent(4, 5, -4, 9))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-4, 5, -4, 9))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-4, 8, -6, 12))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-10, 8, -6, 8))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-10, 10, -6, 8))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-10, 8, -6, 10))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, 8, -6, 5))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, 6, -6, 10))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, 2, -6, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, -5, -6, 15))
plot(gpw4test2)
xmin(gpw4test2) <- (-16)
xmax(gpw4test2) <- (-4)
ymin(gpw4test2) <- (-7)
ymax(gpw4test2) <- (16)
plot(gpw4test2)
gpw4test2
gpw4test2 <- crop(gpw4, extent(-15, -5, -6, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-15, -5, 4, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-18, -5, 4.5, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-14, -5, 4.5, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-14, -5, 4.2, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-18, -5, 4.2, 15))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-18, -5, 4.2, 13))
plot(gpw4test2)
gpw4test2 <- crop(gpw4, extent(-14, -5, 4.2, 13))
plot(gpw4test2)
plot(gpw4test2)
res(gpw4test2)
res(gpw4test2) <- 1
plot(gpw4test2)
res(gpw4test2) <- 1, 1
res(gpw4test2) <-
plot(gpw4test2)
res(gpw4test2)
plot(gpw4test2)
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4test2 <- crop(gpw4, extent(-14, -5, 4.2, 13))
lbr_1<-readOGR(dsn = "shapefiles",layer="counties",stringsAsFactors = FALSE,verbose=FALSE)
lbr_c_lbr1<-extract(gpw4test2,lbr_1,df=TRUE)
save(lbr_c_lbr1,file = "lbr_c_lbr1.RData")
load("lbr_c_lbr1.RData")
plot(lbr_c_lbr1)
View(lbr_c_lbr1)
lbr_1<-readOGR(dsn = "shapefiles",layer="counties",stringsAsFactors = FALSE,verbose=FALSE)
lbr_1_f<-fortify(lbr_1)
lbr_1@data$SUM_HH[1]<-20508
lbr_1@data$ID<-as.character(c(0:14))
lbr_1_f_shp<-left_join(x=lbr_1_f,y=lbr_1@data,by=c("id"="ID"))
map4<-ggplot()+
geom_map(data=lbr_1_f_shp,map=lbr_1_f_shp,aes(x=long,y=lat,map_id=id,fill=log(SUM_TOTAL)))+
scale_fill_gradientn(colours = c("grey100","red2"),guide=guide_colourbar(title=NULL),space="Lab",na.value = "grey60")+
geom_map(data=lbr_1_f_shp,map=lbr_1_f_shp,aes(x=long,y=lat,map_id=id),color="grey45",alpha=0,size=.2)+
theme(text = element_text(color = "white"),
rect = element_rect(fill = "grey35", color = "grey35"),
plot.background = element_rect(fill = "grey35", color = "grey35"),
panel.background = element_rect(fill = "grey35", color = "grey35"),
plot.title = element_text(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = c(.1,.2))+
ggtitle("County Pop. (Shapefile)")
map4
plot(gpw4test2)
map4<-ggplot()+
geom_map(data=gpw4test2,map=lbr_1_f_shp,aes(x=long,y=lat,map_id=id,fill=log(SUM_TOTAL)))+
scale_fill_gradientn(colours = c("grey100","red2"),guide=guide_colourbar(title=NULL),space="Lab",na.value = "grey60")+
geom_map(data=lbr_1_f_shp,map=lbr_1_f_shp,aes(x=long,y=lat,map_id=id),color="grey45",alpha=0,size=.2)+
theme(text = element_text(color = "white"),
rect = element_rect(fill = "grey35", color = "grey35"),
plot.background = element_rect(fill = "grey35", color = "grey35"),
panel.background = element_rect(fill = "grey35", color = "grey35"),
plot.title = element_text(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = c(.1,.2))+
ggtitle("County Pop. (Shapefile)")
?drawExtent
plot(density(gpw4test2))
plot(persp(gpw4test2))
plot(hist(gpw4test2))
plot(contour(gpw4test2))
lbr_1<-readOGR(dsn = "shapefiles",layer="counties",stringsAsFactors = FALSE,verbose=FALSE)
shp2raster <- function(shp, mask.raster, label, value, transform = FALSE, proj.from = NA,
proj.to = NA, map = TRUE) {
require(raster, rgdal)
# use transform==TRUE if the polygon is not in the same coordinate system as
# the output raster, setting proj.from & proj.to to the appropriate
# projections
if (transform == TRUE) {
proj4string(lbr_1) <- proj.from
lbr_1 <- spTransform(lbr_1, proj.to)
}
# convert the shapefile to a raster based on a standardised background
# raster
r <- rasterize(lbr_1, gpw4test2)
# set the cells associated with the shapfile to the specified value
r[!is.na(r)] <- 0.001
# merge the new raster with the mask raster and export to the working
# directory as a tif file
r <- mask(merge(lbr_1, gpw4test2), gpw4test2, filename = label, format = "GTiff",
overwrite = T)
# plot map of new raster
if (map == TRUE) {
plot(r, main = label, axes = F, box = F)
}
names(r) <- label
return(r)
}
plot(r, main = label, axes = F, box = F)
if (transform == TRUE) {
proj4string(lbr_1) <- proj.from
lbr_1 <- spTransform(lbr_1, proj.to)
}
r <- rasterize(lbr_1, gpw4test2)
r[!is.na(r)] <- 0.001
r <- mask(merge(lbr_1, gpw4test2), gpw4test2, filename = label, format = "GTiff",
overwrite = T)
if (map == TRUE) {
plot(r, main = label, axes = F, box = F)
}
if (gpw4test2 == TRUE) {
plot(r, main = label, axes = F, box = F)
}
names(r) <- label
return(r)
plot(gpw4test2, axes = F, box = F)
rasterize(lbr_1, gpw4test2, field=10, background=5, filename = ten)
?rasterize
rasterize(lbr_1, gpw4test2)
t1 <- rasterize(lbr_1, gpw4test2)
plot(t1)
t1 <- rasterize(lbr_1)
e <- extract(gwp4test, lbr_1, fun=mean)
e <- extract(gwp4test2, lbr_1, fun=mean)
e <- extract(gpw4test2, lbr_1, fun=mean)
plot(e)
?fun
