load("C:/Users/Kathryn Murphy/Desktop/INTR/lab_5/.RData")
rm(list=ls())
rm(list=ls())
setwd("~/GitHub/Liberia")
library(rgdal)
library(dplyr)
library(rgeos)
library(ggmap)
library(raster)
library(spatstat)
library(maptools)
library(sp)
library(foreign)
library(knitr)
library(gridExtra)
library(rgdal)
library(dplyr)
library(rgeos)
library(ggmap)
library(raster)
library(spatstat)
library(maptools)
library(sp)
library(foreign)
library(knitr)
library(gridExtra)
plot(gpw4test, axes = F, box = F, col=rainbow((10000)))
rm(list=ls())
setwd("~/GitHub/Liberia")
library(rgdal)
library(dplyr)
library(rgeos)
library(ggmap)
library(raster)
library(maptools)
library(spatstat)
library(sp)
library(foreign)
library(knitr)
library(gridExtra)
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4test <- crop(gpw4, extent(-14, -5, 4.2, 13))
plot(gpw4test, axes = F, box = F, col=rainbow((10000)))
plot(gpw4test, axes = F, box = F, col=terrain.colors((10000)))
plot(gpw4test, axes = F, box = F, col=heat.colors((10000)))
plot(gpw4test, axes = F, box = F, col=cm.colors((10000)))
plot(gpw4test, axes = F, box = F, col=topo.colors((10000)))
gpw4test
gpw4test_aggre <- aggregate(gpw4test, fact = 10)
plot(gpw4test_aggre)
plot(gpw4test_aggre, col=topo.colors(10))
plot(gpw4test_aggre, col=topo.colors(10))
gpw4test_aggre
plot(gpw4test, axes = F, box = F, breaks=c(100,200,300,400,500) col=topo.colors((10000)))
plot(gpw4test, axes = F, box = F, breaks=c(100,200,300,400,500), col=topo.colors((10000)))
plot(gpw4test, axes = F, box = F, breaks=c(100,400,600), col=topo.colors((10000)))
plot(gpw4test, axes = F, box = F, col=topo.colors((10000)))
plot(gpw4test, axes = F, box = F, col=grey(1:100/100))
plot(gpw4test, axes = F, box = F, col=pink(1:100/100))
plot(gpw4test, axes = F, box = F, col=red(1:100/100))
lbr_1<-readOGR(dsn = "shapefiles",layer="counties",stringsAsFactors = FALSE,verbose=FALSE)
plot(lbr_1)
plot(gpw4test, axes = F, box = F, col=topo.colors((10000)))
plot(lbr_1, add=T, legend=F)
plot(lbr_1, col=topo.colors(10), add=T, legend=F)
library(rasterVis)
out <- getData('lbr_1')
levelplot(gpw4test) + layer(sp.polygons(lbr_1))
p <- levelplot(gpw4test, layers=1, margin = list(FUN=median))
p + layer (sp.lines(lbr_1, lwd=0.8, col='black'))
p
proj4string(lbr_1)
lbr_0<-readOGR(dsn="shapefiles", layer="liberia_revised",stringsAsFactors=FALSE, verbose=FALSE)
proj4string(lbr_0)
proj <- CRS('+proj=utm +zone=29 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
lbr_11 <- readShapeLines('~/GitHub/Liberia/shapefiles/liberia_revised.shp', proj4string = proj)
p <- levelplot(gpw4test, layers=1, margin = list(FUN=median))
p + layer (sp.lines(lbr_11, lwd=0.8, col='black'))
p <- levelplot(gpw4test, layers=1)
p + layer (sp.lines(lbr_11, lwd=0.8, col='black'))
p + layer (sp.lines(lbr_11, lwd=0.8, col='white'))
p <- levelplot(gpw4test, layers=1)
p + layer (sp.lines(lbr_11, lwd=0.8, col='white'))
lbr_11 <- readShapeLines('~/GitHub/Liberia/shapefiles/liberia_revised.shp')
p <- levelplot(gpw4test, layers=1)
p + layer (sp.lines(lbr_11, lwd=0.8, col='white'))
lbr_0<-readOGR(dsn="shapefiles", layer="liberia_revised",stringsAsFactors=FALSE, verbose=FALSE)
ext <- extent(-14, -5, 4.2, 13)
ext <- extent(-14, -5, 4.2, 13)
xy <- abs(apply(as.matrix(bbox(ext)), 1, diff))
n <- 5
r <- raster(ext, ncol=xy[1]*n, nrow=xy[2]*n)
rr <- rasterize(lbr_0, r)
writeRaster(rr, "lbr_0.asc")
plot(rr)
ext <- extent(-100, 100, 0, 100)
xy <- abs(apply(as.matrix(bbox(ext)), 1, diff))
n <- 5
r <- raster(ext, ncol=xy[1]*n, nrow=xy[2]*n)
rr <- rasterize(lbr_0, r)
writeRaster(rr, "lbr_0.asc")
plot(rr)
gpw4test_aggre <- aggregate(gpw4test, fact = 100)
plot(gpw4test_aggre, col=topo.colors(10))
gpw4test_aggre <- aggregate(gpw4test, fact = 15)
plot(gpw4test_aggre, col=topo.colors(10))
plot(gpw4test, col=ifelse(x < 0, topo.colors(10)))
plot(gpw4test, col=ifelse(data@values < 0, topo.colors(10)))
?ifelse
plot(gpw4test, col=ifelse(value < 0, topo.colors(10)))
plot(gpw4test, axes = F, box = F, col=topo.colors((10000)))
plot(gpw4test, axes = F, box = F, col=grey(1:100/100))
gpw4test_aggre <- aggregate(gpw4test, fact = 15)
plot(gpw4test_aggre, col=topo.colors(10))
gpw4test <- crop(gpw4, extent(-14, -5, 4.2, 13))
plot(gpw4test, axes = F, box = F, col=topo.colors((10000)))
plot(gpw4test_aggre, col=topo.colors(10))
gpw4test
str(gpw4test)
proj <- CRS('+proj=utm +zone=29 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
lbr_11 <- readShapeLines('~/GitHub/Liberia/shapefiles/liberia_revised.shp')
p <- levelplot(gpw4test, layers=1)
p + layer (sp.lines(lbr_11, lwd=0.8, col='white'))
p
q <- levelplot(gpw4test, layers=1)
q
?levelplot
q <- levelplot(gpw4test, colorkey=(at = seq(0, 1, 0.05)), layers=1)
q
q <- levelplot(gpw4test, layers=1)
q
q <- levelplot(gpw4test, zscaleLog=10, layers=1)
q
gpw4test@data$gpw.v4.population.count_2010
gpw4test@data$gpw.v4.population.count_2010
q <- levelplot(gpw4test, layers=1)
q
lattice.options(default.theme = standard.theme(color = FALSE))
sb <- trellis.par.get("strip.background")
sb[["col"]][1] <- "lightgray"
trellis.par.set("strip.background", sb)
q <- levelplot(gpw4test,col.regions = gray(0:100/100), layers=1)
q
q <- levelplot(gpw4test,col.regions = red(0:100/100), layers=1)
q
q <- levelplot(gpw4test,col.regions = grey(0:100/100), layers=1)
q
view(gpw4test@data$gpw.v4.population.count_2010)
gpw4test@data
gpw4test
w <- levelplot(gpw4test^2, zscaleLog=TRUE, contour=TRUE)
w
install.packages(colorspace)
install.packages('colorspace')
install.packages("colorspace")
library(colorspace)
library(colorspace)
install.packages('colorspace')
library(colorspace)
myTheme <- rasterTheme(region=sequential_hcl(10, power=2.2))
myTheme <- rasterTheme(region=sequential_hcl(10, power=2.2))
w <- levelplot(Aug, par.settings = myTheme, contour = TRUE)
library(rgdal)
library(dplyr)
library(rgeos)
library(ggmap)
library(raster)
library(spatstat)
library(maptools)
library(sp)
library(foreign)
library(knitr)
library(gridExtra)
library(rasterVis)
library(colorspace)
myTheme <- rasterTheme(region=sequential_hcl(10, power=2.2))
w <- levelplot(Aug, par.settings = myTheme, contour = TRUE)
w <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
w <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
rm(list=ls())
setwd("~/GitHub/Liberia")
library(rgdal)
library(dplyr)
library(rgeos)
library(ggmap)
library(raster)
library(spatstat)
library(maptools)
library(sp)
library(foreign)
library(knitr)
library(gridExtra)
library(rasterVis)
library(colorspace)
gpw4<-raster("gpw-v4-population-count_2010.tif")
myTheme <- rasterTheme(region=sequential_hcl(10, power=2.2))
w <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
gpw4test <- crop(gpw4, extent(-14, -5, 4.2, 13))
w <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
w
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
lbrbluelvl
gpw4<-raster("gpw-v4-population-count_2010.tif")
gpw4test <- crop(gpw4, extent(-14, -5, 4.2, 13))
levelplot(gpw4test) + layer(sp.polygons(lbr_1))
myTheme <- rasterTheme(region=sequential_hcl(10, power=2.2))
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
lbrbluelvl
piplup <- Con(raster!=0, gpw4test)
piplup <- con(raster!=0, gpw4test)
?cor
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, scales=list(log="e"), contour = TRUE)
lbrbluelvl
piplup <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE, level.range = c(1(gpw4test), max(gpw4test)))
piplup
piplup <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE, level.range = c(min(gpw4test), max(gpw4test)))
piplup
gpw4test@ncols
gpw4test@data
1 <- gpw4test@data@min
1 <- leftjoin(gpw4test@data@min)
gpw4test@data@min
gpw4test@data@haveminmax
gpw4test@data@min
gpw4test@data@min <- 1
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
lbrbluelvl
gpw4test@data@min <- 0
lbrbluelvl <- levelplot(gpw4test, min=1, par.settings = myTheme, contour = TRUE)
lbrbluelvl
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE, cuts=15)
lbrbluelvl
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE)
lbrbluelvl
lbrgreylvl <- levelplot(gpw4test,col.regions = grey(0:100/100), layers=1, drop.unused.levels = T)
lbrgreylvl
lbrbluelvl <- levelplot(gpw4test, par.settings = myTheme, contour = TRUE, drop.unused.levels = T)
lbrbluelvl
gpw4test@data@max
my.at <- seq(1, 22497.86, by = 250)
levelplot(gpw4test, at=my.at)
my.at <- seq(1, 10000, by = 250)
levelplot(gpw4test, at=my.at)
piplup <- seq(1, 1000, by = 250)
levelplot(gpw4test, at=piplup)
piplup <- seq(1, 100, by = 10)
levelplot(gpw4test, at=piplup)
piplup <- seq(1, 100, by = 5)
levelplot(gpw4test, at=piplup)
piplup <- seq(0, 100, by = 5)
levelplot(gpw4test, at=piplup)
piplup <- seq(.01, 100, by = 5)
levelplot(gpw4test, at=piplup)
